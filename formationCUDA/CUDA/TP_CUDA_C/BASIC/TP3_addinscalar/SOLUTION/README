
Complete the file main.cu




cudaError_t cudaMalloc( void ** devPtr, size_t  size )

  Parameters:
  devPtr        - Pointer to allocated device memory
  size          - Requested allocation size in bytes



cudaError_t cudaMemcpy( void *dst, const void *src, size_t count, enum cudaMemcpyKind kind )

  Parameters:
  dst   - Destination memory address
  src   - Source memory address
  count - Size in bytes to copy
  kind  - Type of transfer: cudaMemcpyHostToHost, cudaMemcpyHostToDevice, cudaMemcpyDeviceToHost, or cudaMemcpyDeviceToDevice



cudaError_t cudaFree( void *devPtr )

  Parameters:
  devPtr        - Device pointer to memory to free




__global__   declares kernel, which is called on host and executed on device
__device__   declares device function, which is called and executed on device
__host__     declares host function, which is called and executed on host


dim3 : integer vector type
  dim3 value( nx, ny, nz );
  dim3 value;
  value.x = nx;
  value.y = ny;
  value.z = nz;


kernelName<<< blocksInGrid, threadsPerBlock >>>(args, ... );



